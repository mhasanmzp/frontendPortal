.root {
  display: flex;
  flex-direction: column;
  height: 100%;
}

textarea {
  width: 100%;
  border: none;
  font-size: 15px;
  background: transparent;
  border: none;
  overflow: auto;
  outline: none;

  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;

  resize: none;
  /*remove the resize handle on the bottom right*/

}

.app-name {
  font-size: 28px;
  font-family: 'Lato', sans-serif;
  font-weight: bold;
}

.has-gradient-text {
  background: -webkit-linear-gradient(#13f7f4, #2af598);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}


.board {
  display: flex;
  flex-direction: column;
  flex-grow: 1;

  // Override Automatic Minimum Size
  // https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size
  min-width: 0;
  min-height: 0;

  .board-bar {
    background: rgba(gray, 0.5);
    padding: 8px 15px;

    .board-name {
      font-size: 20px;
      font-weight: bold;
      color: var(--ion-color-dark) !important;;
    }
  }

  .board-wrapper {
    display: flex;
    flex-grow: 1;
    overflow-x: auto;

    .board-columns {
      display: flex;
      margin-top: 10px;
      flex-grow: 1;

      .board-column {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        flex-basis: 0;
        max-width: 300px;
        margin: 0px 10px;
        padding: 5px;
        border-radius: 4px;
        background: var(--ion-color-gray);

        &:not(:first-child) {
          margin-left: 0;
        }

        .column-title {
          font-size: 16px;
          font-weight: 800;
          font-family: 'Lato', sans-serif;
          text-transform: uppercase;

          ion-label {
            color: var(--ion-color-dark) !important;
          }

          // margin-bottom: 20px;
        }
      }
    }
  }
}


.tasks-container {
  flex-grow: 1;
  overflow-y: auto;
}

.task {
  // display: flex;
  // padding: 0px 5px;
  background: var(--ion-color-light) !important;
  color: var(--ion-color-dark) !important;
  border: 1px solid #4e4e4e;
  border-radius: 10px;
  overflow: hidden;

  margin-bottom: 10px;
  cursor: pointer;

  // box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.05),
  // 0 3px 14px 2px rgba(0, 0, 0, 0.05);
}

.task:hover {
  border: 1px solid #ccc;
}

.newTask {
  // display: flex;
  // padding: 15px 12px;
  color: var(--ion-color-dark) !important;
  // border-radius: 10px;
  // text-align: center;
  // margin-bottom: 10px;

  ion-item {
    --color: var(--ion-color-dark) !important;
    cursor: pointer;
  }

  ion-item:hover {
    background: #161b22;
    border-radius: 10px;
  }
}

.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: 10px;
  color: var(--ion-color-dark) !important;
  border: 1px solid #0fbcf9;
  // box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
  //             0 8px 10px 1px rgba(0, 0, 0, 0.14),
  //             0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.tasks-container.cdk-drop-list-dragging .task:not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

ion-label h2, p, div {
  color: var(--ion-color-dark) !important;
}

input {
  color: var(--ion-color-dark) !important;
}

ion-menu-button {
  color: var(--ion-color-primary);
}

ion-grid {
  --ion-grid-column-padding: 10px;
  border-collapse: collapse;
  border-style: hidden;
  margin-top: 0px;
  padding-top: 0px;
  // padding: 10px;
  // background-color: #fff;

  ion-row {
    margin: 5px 0px;
  }

  ion-row:first-child {
    background-color: #2980b9;
    border-radius: 5px;
    color: var(--ion-color-dark) !important;;
    font-weight: bold;
  }

  ion-col {
    // border: 1px solid #ccc;
    border-bottom: 0;
    border-right: 0;
  }
  // ion-col:last-child {
  // border-right: 1px solid black;
  // }

  // ion-row:last-child {
  // border-bottom: 1px solid black;
  // }
}

select, input {
  width: 100%;
  padding: 7px;
  background: var(--ion-color-light);
  color: var(--ion-color-dark) !important;;
  border: none;
  // border: 0.5px solid rgb(83, 83, 83);
  // border-radius: 10px;
  // box-shadow: 0 0 10px 100px #fff inset;
  outline: none;

}

select option{
  font-size: 14px;
  width:150px !important;   
}

select:active,
select:hover {
  outline: none
}

select:focus {
  border-color: gray;
  outline: none;
}

:host ::ng-deep .ngx-datatable .datatable-body .datatable-scroll {
  display: inherit;
}

ion-item {
  --background: transparent;
}

ion-grid ion-col {
  border-bottom: 0;
  border-right: 0;
  font-size: 14px;
}

.box {
  background-color: var(--ion-color-light) !important;
  height: 50px;
  border-bottom: 1px solid #fff;
  border-top: 0.3px solid #0d1116;
  line-height: 60px;
  padding: 0px 10px;
  font-size: 16px;
}

.colHeader {
  background-color: var(--ion-color-light) !important;
  height: 70px;
  border-bottom: 0.8px solid #000;
  border-top: 0.8px solid #0d1116;
  margin-bottom: 0.5px;
}

.box div:nth-child(even) {
  fill: #161c22 !important;
  stroke: #0d1116 !important;
}

.wrapper1,
.wrapper2 {
  // width: 300px;
  border: none 0px RED;
  overflow-x: scroll;
  overflow-y: hidden;
}

.wrapper1 {
  height: 20px;
  margin-top: -10px;
  position: sticky;
  top: 0px;
  z-index: 999999999;
  background: #3d3d3d;
}

.wrapper2 {
  height: 200px;
}

.selected {
  background-color: var(--ion-color-light) !important;
  cursor: pointer;
  margin-bottom: 5px;
  color: var(--ion-color-tertiary) !important;
  border: 1px solid var(--ion-color-tertiary);
  border-radius: 5px;
}

.notSelected {
  cursor: pointer;
  background-color: var(--ion-color-light) !important;
  color: var(--ion-color-dark) !important;
  border: 1px solid var(--ion-color-light);
  margin-bottom: 5px;
  border-radius: 5px;
}

.scroll {
  width: 200px;
  height: 400px;
  overflow: scroll;
}

.scroll::-webkit-scrollbar {
  width: 12px;
}

.scroll::-webkit-scrollbar-track {
  //  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); 
  border-radius: 10px;
}

.scroll::-webkit-scrollbar-thumb {
  //  border-radius: 10px;
  background-color: #656565;
  width: 3px;
  border: 0.5px solid #656565;
  //  -webkit-box-shadow: inset 0 0 6px rgba(255, 0, 0); 
}

ion-radio.radio-checked::part(container) {
  background: #0765f1;
  border-color: transparent;
  border-radius: 50%;
}